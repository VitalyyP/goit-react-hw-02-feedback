{"version":3,"sources":["components/NotificationMessage/NotificationMessage.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["NotificationMessage","className","s","text","Statistics","good","neutral","bad","countTotalFeedbacks","countPositiveFeedbackPercentage","FeedbackOptions","options","onLeaveFeedback","bottons","map","option","onClick","type","button","shortid","generate","Section","title","children","container","App","state","handleIncrement","setState","prevStat","totalFeedbacks","Math","round","this","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"4UAEe,SAASA,IACtB,OAAO,mBAAGC,UAAWC,IAAEC,KAAhB,+BCCM,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,oBACAC,EACC,EADDA,gCAEA,OACE,mCACGD,IAAwB,EACvB,qCACE,oBAAGP,UAAWC,IAAEC,KAAhB,mBAA6BE,KAC7B,oBAAGJ,UAAWC,IAAEC,KAAhB,sBAAgCG,KAChC,oBAAGL,UAAWC,IAAEC,KAAhB,kBAA4BI,KAC5B,oBAAGN,UAAWC,IAAEC,KAAhB,oBAA8BK,OAC9B,oBAAGP,UAAWC,IAAEC,KAAhB,iCACuBM,EAAgCD,KADvD,WAKF,cAACR,EAAD,M,qCCpBO,SAASU,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,qBAAKX,UAAWC,IAAEW,QAAlB,SACGF,EAAQG,KAAI,SAAAC,GAAM,OACjB,wBACEC,QAAS,kBAAMJ,EAAgBG,IAC/BE,KAAK,SACLhB,UAAWC,IAAEgB,OAHf,SAMGH,GAFII,IAAQC,iB,oBCTR,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,sBAAKtB,UAAWC,IAAEsB,UAAlB,UACGF,GAAS,oBAAIrB,UAAWC,IAAEoB,MAAjB,SAAyBA,IAClCC,K,ICHDE,E,4MAKJC,MAAQ,CACNrB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPoB,gBAAkB,SAAAZ,GAChB,EAAKa,UAAS,SAAAC,GAAQ,sBACnBd,EAASc,EAASd,GAAU,O,EAIjCP,oBAAsB,kBAAM,EAAKkB,MAAMrB,KAAO,EAAKqB,MAAMpB,QAAU,EAAKoB,MAAMnB,K,EAE9EE,gCAAkC,SAAAqB,GAAc,OAC9CC,KAAKC,MAAO,EAAKN,MAAMrB,KAAOyB,EAAkB,M,4CAClD,WACE,MAA+BG,KAAKP,MAA5BrB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACfoB,EAA0EM,KAA1EN,gBAAiBnB,EAAyDyB,KAAzDzB,oBAAqBC,EAAoCwB,KAApCxB,gCAC9C,OACE,qCACE,cAACY,EAAD,CAASC,MAAM,wBAAf,SACE,cAACZ,EAAD,CAAiBC,QAAS,CAAC,OAAQ,UAAW,OAAQC,gBAAiBe,MAEzE,cAACN,EAAD,CAASC,MAAM,aAAf,SACE,cAAClB,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,oBAAqBA,EACrBC,gCAAiCA,a,GAnC3ByB,aAAZT,EACGU,aAAe,GAyCTV,QCzCfW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,OAAS,kC","file":"static/js/main.31a6df58.chunk.js","sourcesContent":["import s from './NotificationMessage.module.css';\r\n\r\nexport default function NotificationMessage() {\r\n  return <p className={s.text}>No feedback given</p>;\r\n}\r\n","import s from './Statistics.module.css';\r\nimport NotificationMessage from '../NotificationMessage';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  countTotalFeedbacks,\r\n  countPositiveFeedbackPercentage,\r\n}) {\r\n  return (\r\n    <>\r\n      {countTotalFeedbacks() > 0 ? (\r\n        <>\r\n          <p className={s.text}>Good: {good}</p>\r\n          <p className={s.text}>Neutral: {neutral}</p>\r\n          <p className={s.text}>Bad: {bad}</p>\r\n          <p className={s.text}>Total: {countTotalFeedbacks()}</p>\r\n          <p className={s.text}>\r\n            Positive feedbacks: {countPositiveFeedbackPercentage(countTotalFeedbacks())} %\r\n          </p>\r\n        </>\r\n      ) : (\r\n        <NotificationMessage />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  countTotalFeedbacks: PropTypes.func,\r\n  countPositiveFeedbackPercentage: PropTypes.func,\r\n};\r\n","import s from './FeedbackOptions.module.css';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div className={s.bottons}>\r\n      {options.map(option => (\r\n        <button\r\n          onClick={() => onLeaveFeedback(option)}\r\n          type=\"button\"\r\n          className={s.button}\r\n          key={shortid.generate()}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n","import s from './Section.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <div className={s.container}>\r\n      {title && <h3 className={s.title}>{title}</h3>}\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.any,\r\n};\r\n","import { Component } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\nclass App extends Component {\n  static defaultProps = {};\n\n  static propTypes = {};\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = option => {\n    this.setState(prevStat => ({\n      [option]: prevStat[option] + 1,\n    }));\n  };\n\n  countTotalFeedbacks = () => this.state.good + this.state.neutral + this.state.bad;\n\n  countPositiveFeedbackPercentage = totalFeedbacks =>\n    Math.round((this.state.good / totalFeedbacks) * 100);\n  render() {\n    const { good, neutral, bad } = this.state;\n    const { handleIncrement, countTotalFeedbacks, countPositiveFeedbackPercentage } = this;\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={['good', 'neutral', 'bad']} onLeaveFeedback={handleIncrement} />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            countTotalFeedbacks={countTotalFeedbacks}\n            countPositiveFeedbackPercentage={countPositiveFeedbackPercentage}\n          />\n        </Section>\n      </>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1fxgb\"};"],"sourceRoot":""}